<link rel="stylesheet" href="~/css/grid.css" />
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Company
        <small>Admin panel</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> AdminPanel</a></li>
        <li class="active">Home</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <div class="control-section">
        <ejs-grid id="Grid" actionFailure="actionFailure" actionComplete="actionComplete" toolbar="@(new List<string>() { "Add", "Edit", "Delete","Print","Search" })" allowPaging="true">
            <e-data-manager url="/AdminPanel/Company/UrlDataSource" insertUrl="/AdminPanel/Company/CreateEdit" updateUrl="/AdminPanel/Company/CreateEdit" removeUrl="/AdminPanel/Company/Delete" adaptor="UrlAdaptor"></e-data-manager>
            <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Dialog" template='#dialogtemplate'></e-grid-editSettings>
            <e-grid-columns>
                <e-grid-column field="Id" headerText="Company Id" allowSearching="false" allowFiltering="false" isPrimaryKey="true" visible="false"></e-grid-column>
                <e-grid-column field="Name" headerText="Company Name" type="string"></e-grid-column>
                <e-grid-column field="Business" headerText="Business" type="string"></e-grid-column>
                <e-grid-column field="Country" headerText="Country" type="string"></e-grid-column>
                <e-grid-column field="City" headerText="City" type="string"></e-grid-column>
                <e-grid-column field="Telephone" headerText="Telephone"></e-grid-column>
                <e-grid-column field="IsActive" allowSearching="false" headerText="Active" displayAsCheckBox="true"></e-grid-column>
            </e-grid-columns>
        </ejs-grid>
    </div>
</section><!-- /.content -->


<script id='dialogtemplate' type="text/x-template">
    <div id="dialogTemp"></div>
</script>
<script>
    function removeImage(e) {
        var inputElement = document.getElementById('Logo');
        inputElement.value = "";
    }
    function onFileSelect(imageInput) {
        const file = imageInput.filesData[0].rawFile;
        getBase64(file);
    }
    function getBase64(file) {
        var reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = function () {
            var inputElement = document.getElementById('Logo');
            inputElement.value = reader.result;
        };
    }
    function browseClick() {
        document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();
        return false;
    };
    function actionFailure(args) {
        displayErrors(args)
        }
    function displayErrors(err) {
            var grid = document.getElementById("Grid").ej2_instances[0];
            if (err.error[0].error.status === 400) {
            const validationErrorDictionary = JSON.parse( err.error[0].error.responseText);
                for (const fieldName in validationErrorDictionary) {
                    if (validationErrorDictionary.hasOwnProperty(fieldName)) {
                        var validationEle = $(".e-edit-dialog .form-row div.e-float-input #" + fieldName);
                        var spanEle = document.createElement("span");
                        spanEle.textContent = '*' + validationErrorDictionary[fieldName];
                        spanEle.style.color = "red";
                        validationEle.parent().append(spanEle)
                    }
                }
            }else {
                var validationEle = $(".e-edit-dialog .form-row");
                var spanEle = document.createElement("span");
                spanEle.textContent = 'Please Check Your Connection';
                spanEle.style.color = "red";
                validationEle.append(spanEle)
            }
        }
    function actionComplete(args) {
            if (args.requestType === 'beginEdit' || args.requestType === 'add') {
                let spinner = ej.popups.createSpinner({ target: args.dialog.element });
                ej.popups.showSpinner(args.dialog.element);
                if (args.requestType === 'beginEdit' || args.requestType === 'add') {
                    var ajax = new ej.base.Ajax({
                        url: "@Url.Action("EditAddPartial", "Company")", //render the partial view
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify({ value: args.rowData })
                    });
                    ajax.send().then(function (data) {
                        appendElement(data, args.form); //Render the edit form with selected record
                        args.form.elements.namedItem('Name').focus();
                        ej.popups.hideSpinner(args.dialog.element);
                    }).catch(function (xhr) {
                        console.log(xhr);
                        ej.popups.hideSpinner(args.dialog.element);
                    });
                }
            }
        }
    function appendElement(elementString, form) {
        form.querySelector("#dialogTemp").innerHTML = elementString;
        var script = document.createElement('script');
        script.type = "text/javascript";
        var serverScript = form.querySelector("#dialogTemp").querySelector('script');
        script.textContent = serverScript.innerHTML;
        document.head.appendChild(script);
        serverScript.remove();
    }
</script>
